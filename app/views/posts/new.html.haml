%span.home-message
%br/

= react_component('PostsNew', user_id: current_user.id, create_post_url: posts_path)

%pre
  %code
    :preserve
    :escaped

      // app/views/posts/new.html.haml
      = react_component('PostsNew', user_id: current_user.id, create_post_url: posts_path)

      // app/assets/components/posts/new.es6.jsx
      class PostsNew extends React.Component {<br/>  constructor(props) {<br/>    super(props);<br/>    this.state = { user_id: this.props.user_id, title: '', content: '' };<br/><br/>  }<br/><br/>  render() {<br/>    var errorMessage = this.renderErrors();<br/><br/>    return (<br/>      &lt;div&gt;<br/>        &lt;h2&gt; Add new Post &lt;/h2&gt;<br/><br/>        { errorMessage }<br/><br/>        &lt;form onSubmit={this.submitPost.bind(this)}&gt;<br/>          &lt;div className=&quot;form-group&quot;&gt;<br/>            &lt;textarea className=&quot;form-control&quot;<br/>                      placeholder=&quot;Title&quot;<br/>                      value={this.state.title}<br/>                      onChange={(event) =&gt; this.handleChange(event, 'title')}/&gt;<br/>          &lt;/div&gt;<br/><br/><br/>          &lt;div className=&quot;form-group&quot;&gt;<br/>            &lt;textarea className=&quot;form-control&quot;<br/>                      placeholder=&quot;Content&quot;<br/>                      value={this.state.content}<br/>                      onChange={(event) =&gt; this.handleChange(event, 'content')}/&gt;<br/>          &lt;/div&gt;<br/><br/>          &lt;div className=&quot;form-group&quot;&gt;<br/>            &lt;button type=&quot;submit&quot;<br/>                    ref=&quot;submit&quot;<br/>                    className=&quot;btn btn-success&quot;&gt;<br/>              Submit<br/>            &lt;/button&gt;<br/>          &lt;/div&gt;<br/>        &lt;/form&gt;<br/>      &lt;/div&gt;<br/>    );<br/>  }<br/><br/>  renderErrors() {<br/>    if (this.state.errors) {<br/>      var errors = this.state.errors;<br/>      return (<br/>        &lt;div className=&quot;alert alert-danger&quot;&gt;<br/>          &lt;ul&gt;<br/>            {errors.map((error, idx) =&gt; {<br/>               return(<br/>                 &lt;li key={idx}&gt;<br/>                   {error}<br/>                 &lt;/li&gt;<br/>               )<br/>             })}<br/>          &lt;/ul&gt;<br/>        &lt;/div&gt;<br/>      );<br/>    }<br/>  }<br/><br/>  handleChange(event, attribute) {<br/>    var newState = this.state;<br/>    newState[attribute] = event.target.value;<br/>    newState.errors = null;<br/>    this.setState(newState);<br/>    console.log(this.state);<br/>  }<br/><br/><br/>  setPosts(posts) {<br/>    if (posts.errors) {<br/>      this.setState({errors: posts.errors})<br/>    } else {<br/>      this.props.setPosts(posts);<br/>    }<br/>  }<br/><br/>  parseJSON(response) {<br/>    return response.json()<br/>  }<br/><br/>  submitPost(event) {<br/>    event.preventDefault();<br/><br/>    $.ajax({<br/>      type: 'POST',<br/>      url: this.props.create_post_url,<br/>      data: { post: this.state },<br/>      success: function(data) {<br/>        if (data.errors) {<br/>          this.setState({ errors: data.errors });<br/>        } else {<br/>          window.location = data.redirect_url<br/>        }<br/>      }.bind(this)<br/>    });<br/>  }<br/>}<br/>
